#!/usr/bin/python

"""
Script created by VND - Visual Network Description (SDN version)
"""
from mininet.net import Mininet
from mininet.node import Controller, RemoteController, OVSKernelSwitch, UserSwitch
from mininet.cli import CLI
from mininet.log import setLogLevel
from mininet.link import Link, TCLink

def topology():
    "Create a network."
    net = Mininet( controller=RemoteController, link=TCLink, switch=OVSKernelSwitch )
    c0 = net.addController('c0')

    print "*** Creating nodes"
    s1 = net.addSwitch( 's1', listenPort=6673, mac='00:00:00:00:00:01' )
    s2 = net.addSwitch( 's2', listenPort=6674, mac='00:00:00:00:00:02' )
    s3 = net.addSwitch( 's3', listenPort=6675, mac='00:00:00:00:00:03' )
    s4 = net.addSwitch( 's4', listenPort=6676, mac='00:00:00:00:00:04' )
    s5 = net.addSwitch( 's5', listenPort=6677, mac='00:00:00:00:00:05' )
    s6 = net.addSwitch( 's6', listenPort=6678, mac='00:00:00:00:00:06' )
    s7 = net.addSwitch( 's7', listenPort=6679, mac='00:00:00:00:00:07' )
    s8 = net.addSwitch( 's8', listenPort=66710, mac='00:00:00:00:00:08' )
    s9 = net.addSwitch( 's9', listenPort=66711, mac='00:00:00:00:00:09' )
    s10 = net.addSwitch( 's10', listenPort=66712, mac='00:00:00:00:00:10' )
    s11 = net.addSwitch( 's11', listenPort=66713, mac='00:00:00:00:00:11' )
    s12 = net.addSwitch( 's12', listenPort=66714, mac='00:00:00:00:00:12' )
    s13 = net.addSwitch( 's13', listenPort=66715, mac='00:00:00:00:00:13' )
    s14 = net.addSwitch( 's14', listenPort=66716, mac='00:00:00:00:00:14' )
    s15 = net.addSwitch( 's15', listenPort=66717, mac='00:00:00:00:00:15' )
    s16 = net.addSwitch( 's16', listenPort=66718, mac='00:00:00:00:00:16' )
    s17 = net.addSwitch( 's17', listenPort=66719, mac='00:00:00:00:00:17' )
    s18 = net.addSwitch( 's18', listenPort=66720, mac='00:00:00:00:00:18' )
    s19 = net.addSwitch( 's19', listenPort=66721, mac='00:00:00:00:00:19' )
    s20 = net.addSwitch( 's20', listenPort=66722, mac='00:00:00:00:00:20' )
    s21 = net.addSwitch( 's21', listenPort=66723, mac='00:00:00:00:00:21' )
    h22 = net.addHost( 'h22', mac='00:00:00:00:00:22', ip='10.0.0.22/8' )
    h23 = net.addHost( 'h23', mac='00:00:00:00:00:23', ip='10.0.0.23/8' )
    h24 = net.addHost( 'h24', mac='00:00:00:00:00:24', ip='10.0.0.24/8' )
    h25 = net.addHost( 'h25', mac='00:00:00:00:00:25', ip='10.0.0.25/8' )
    h26 = net.addHost( 'h26', mac='00:00:00:00:00:26', ip='10.0.0.26/8' )
    h27 = net.addHost( 'h27', mac='00:00:00:00:00:27', ip='10.0.0.27/8' )
    h28 = net.addHost( 'h28', mac='00:00:00:00:00:28', ip='10.0.0.28/8' )
    h29 = net.addHost( 'h29', mac='00:00:00:00:00:29', ip='10.0.0.29/8' )
    h30 = net.addHost( 'h30', mac='00:00:00:00:00:30', ip='10.0.0.30/8' )
    h31 = net.addHost( 'h31', mac='00:00:00:00:00:31', ip='10.0.0.31/8' )
    h32 = net.addHost( 'h32', mac='00:00:00:00:00:32', ip='10.0.0.32/8' )
    h33 = net.addHost( 'h33', mac='00:00:00:00:00:33', ip='10.0.0.33/8' )
    h34 = net.addHost( 'h34', mac='00:00:00:00:00:34', ip='10.0.0.34/8' )
    h35 = net.addHost( 'h35', mac='00:00:00:00:00:35', ip='10.0.0.35/8' )
    h36 = net.addHost( 'h36', mac='00:00:00:00:00:36', ip='10.0.0.36/8' )
    h37 = net.addHost( 'h37', mac='00:00:00:00:00:37', ip='10.0.0.37/8' )
    h94 = net.addHost( 'h94', mac='00:00:00:00:00:94', ip='10.0.0.94/8' )
    h95 = net.addHost( 'h95', mac='00:00:00:00:00:95', ip='10.0.0.95/8' )
    h96 = net.addHost( 'h96', mac='00:00:00:00:00:96', ip='10.0.0.96/8' )
    h97 = net.addHost( 'h97', mac='00:00:00:00:00:97', ip='10.0.0.97/8' )
    h98 = net.addHost( 'h98', mac='00:00:00:00:00:98', ip='10.0.0.98/8' )
    h99 = net.addHost( 'h99', mac='00:00:00:00:00:99', ip='10.0.0.99/8' )

    print "*** Creating links"
    net.addLink(h99, s1, 0, 10)
    net.addLink(h98, s1, 0, 9)
    net.addLink(h97, s1, 0, 8)
    net.addLink(h96, s1, 0, 7)
    net.addLink(h95, s1, 0, 6)
    net.addLink(h94, s1, 0, 5)
    net.addLink(s21, h37, 4, 0)
    net.addLink(s21, h36, 3, 0)
    net.addLink(s20, h35, 4, 0)
    net.addLink(s20, h34, 3, 0)
    net.addLink(s17, h33, 4, 0)
    net.addLink(s17, h32, 3, 0)
    net.addLink(s16, h31, 4, 0)
    net.addLink(s16, h30, 3, 0)
    net.addLink(s13, h29, 4, 0)
    net.addLink(s13, h28, 3, 0)
    net.addLink(s12, h27, 4, 0)
    net.addLink(s12, h26, 3, 0)
    net.addLink(s9, h25, 4, 0)
    net.addLink(s9, h24, 3, 0)
    net.addLink(s8, h23, 4, 0)
    net.addLink(s8, h22, 3, 0)
    net.addLink(s20, s19, 2, 4)
    net.addLink(s18, s21, 4, 2)
    net.addLink(s19, s21, 3, 1)
    net.addLink(s18, s20, 3, 1)
    net.addLink(s14, s17, 4, 2)
    net.addLink(s16, s15, 2, 4)
    net.addLink(s15, s17, 3, 1)
    net.addLink(s14, s16, 3, 1)
    net.addLink(s12, s11, 2, 4)
    net.addLink(s10, s13, 4, 2)
    net.addLink(s11, s13, 3, 1)
    net.addLink(s10, s12, 3, 1)
    net.addLink(s6, s9, 5, 2)
    net.addLink(s8, s7, 2, 4)
    net.addLink(s7, s9, 3, 1)
    net.addLink(s6, s8, 4, 1)
    net.addLink(s5, s19, 5, 2)
    net.addLink(s15, s5, 2, 4)
    net.addLink(s11, s5, 2, 3)
    net.addLink(s7, s5, 2, 2)
    net.addLink(s4, s19, 5, 1)
    net.addLink(s4, s15, 4, 1)
    net.addLink(s11, s4, 1, 3)
    net.addLink(s7, s4, 1, 2)
    net.addLink(s3, s18, 6, 2)
    net.addLink(s14, s3, 2, 5)
    net.addLink(s3, s10, 4, 2)
    net.addLink(s2, s18, 5, 1)
    net.addLink(s2, s14, 4, 1)
    net.addLink(s2, s10, 3, 1)
    net.addLink(s6, s3, 3, 3)
    net.addLink(s2, s6, 2, 2)
    net.addLink(s1, s5, 4, 1)
    net.addLink(s1, s4, 3, 1)
    net.addLink(s3, s1, 1, 2)
    net.addLink(s2, s1, 1, 1)

    print "*** Starting network"
    net.build()
	
    s1.start([c0])
    s2.start([c0])
    s3.start([c0])
    s4.start([c0])
    s5.start([c0])
    s6.start([c0])
    s7.start([c0])
    s8.start([c0])
    s9.start([c0])
    s10.start([c0])
    s11.start([c0])
    s12.start([c0])
    s13.start([c0])
    s14.start([c0])
    s15.start([c0])
    s16.start([c0])
    s17.start([c0])
    s18.start([c0])
    s19.start([c0])
    s20.start([c0])
    s21.start([c0])


    print "*** Running CLI"
    CLI( net )

    print "*** Stopping network"
    net.stop()

if __name__ == '__main__':
    setLogLevel( 'info' )
    topology()

